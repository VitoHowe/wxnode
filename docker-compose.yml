version: '3.8'

services:
  # 应用服务（连接宿主机的 MySQL 和 Redis）
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wxnode-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # 服务器配置
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      
      # 数据库配置（连接宿主机的 MySQL）
      DB_HOST: ${DB_HOST:-host.docker.internal}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      
      # Redis 配置（连接宿主机的 Redis）
      REDIS_HOST: ${REDIS_HOST:-host.docker.internal}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      
      # JWT 配置
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      
      # 微信小程序配置
      WECHAT_APPID: ${WECHAT_APPID}
      WECHAT_SECRET: ${WECHAT_SECRET}
      
      # 文件上传配置
      UPLOAD_PATH: ${UPLOAD_PATH:-./uploads}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-50MB}
      
      # 解析服务配置
      PARSE_SERVICE_URL: ${PARSE_SERVICE_URL:-http://localhost:8000}
      
      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FILE: ${LOG_FILE:-./logs/app.log}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./public:/app/public
    networks:
      - wxnode-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    entrypoint: ["/bin/sh", "/app/docker-entrypoint.sh"]
    command: ["node", "-r", "tsconfig-paths/register", "dist/app.js"]

networks:
  wxnode-network:
    driver: bridge
